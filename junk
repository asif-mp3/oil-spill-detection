/* Custom Cursor:

CustomCursor.js:
import React, { useEffect } from 'react';
import './index.css'; // Ensure your CSS is correctly imported

const CustomCursor = () => {
  useEffect(() => {
    const TAIL_LENGTH = 20; // Reduced tail length for smoother effect
    const cursor = document.getElementById('cursor');
    let mouseX = 0;
    let mouseY = 0;
    let cursorCircles;
    let cursorHistory = Array(TAIL_LENGTH).fill({ x: 0, y: 0 });

    const onMouseMove = (event) => {
      mouseX = event.clientX;
      mouseY = event.clientY;
    };

    const onClick = () => {
      for (let i = 0; i < TAIL_LENGTH; i++) {
        cursorHistory[i].x += Math.random() * 100 - 50;
        cursorHistory[i].y += Math.random() * 100 - 50;
      }
    };

    const initCursor = () => {
      for (let i = 0; i < TAIL_LENGTH; i++) {
        let div = document.createElement('div');
        div.classList.add('cursor-circle');
        cursor.append(div);
      }
      cursorCircles = Array.from(document.querySelectorAll('.cursor-circle'));
    };

    const updateCursor = () => {
      cursorHistory.shift();
      cursorHistory.push({ x: mouseX, y: mouseY });

      for (let i = 0; i < TAIL_LENGTH; i++) {
        let current = cursorHistory[i];
        let next = cursorHistory[i + 1] || cursorHistory[TAIL_LENGTH - 1];

        let xDiff = next.x - current.x;
        let yDiff = next.y - current.y;

        current.x += xDiff * 0.45;
        current.y += yDiff * 0.45;
        cursorCircles[i].style.transform = `translate(${current.x}px, ${current.y}px) scale(${i / TAIL_LENGTH})`;
      }

      requestAnimationFrame(updateCursor);
    };

    document.addEventListener('mousemove', onMouseMove, false);
    document.addEventListener('click', onClick, false);

    initCursor();
    updateCursor();

    return () => {
      document.removeEventListener('mousemove', onMouseMove);
      document.removeEventListener('click', onClick);
    };
  }, []);

  return (
    <>
      {/* SVG filter for gooey effect */}
      <svg xmlns="http://www.w3.org/2000/svg" className="goo" version="1.1">
        <defs>
          <filter id="goo">
            <feGaussianBlur in="SourceGraphic" stdDeviation="8" result="blur" />
            <feColorMatrix
              in="blur"
              mode="matrix"
              values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 35 -15"
              result="goo"
            />
            <feComposite in="SourceGraphic" in2="goo" operator="atop" />
          </filter>
        </defs>
      </svg>

      <div
        id="cursor"
        style={{
          position: 'fixed',
          top: '0',
          left: '0',
          pointerEvents: 'none',
          mixBlendMode: 'difference',
          filter: 'url(#goo)',
          zIndex: '1000',
        }}
      >
        {/* Cursor circles are dynamically added */}
      </div>
    </>
  );
};

export default CustomCursor;

index.js:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import CustomCursor from './CustomCursor'; // Import the CustomCursor component


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
    <CustomCursor /> {/* Render the custom cursor */}
  </React.StrictMode>
);


index.css:
body {
  margin: 0;
  scroll-behavior: smooth;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
  cursor: none;
}


code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
 
:root {
  --cursor-size: 20px;
  --bg: #f7eed6;
}

.page-wrap {
  background: var(--bg);
  min-height: 100vh;
}

#cursor {
  position: fixed;
  top: calc(var(--cursor-size) * -0.5);
  left: calc(var(--cursor-size) * -0.5);
  pointer-events: none;
  mix-blend-mode: difference;
  filter: url(#goo);
  z-index: 10; /* Ensure the cursor is above other content */
}

.cursor-circle {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--cursor-size);
  height: var(--cursor-size);
  border-radius: var(--cursor-size);
  background: var(--bg);
  transform-origin: center center;
}


h1 {
  margin: 0;
  font-size: 148px;
  line-height: 1;
  font-family: sans-serif;
  text-transform: uppercase;
  user-select: none;
}

.goo {
  display: none;
}

@keyframes grid {
  0% {
    transform: translateY(-50%);
  }
  100% {
    transform: translateY(0);
  }
}

.background-grid {
  position: absolute;
  width: 100vw;
  height: 200vh;
  background: repeating-linear-gradient(
    45deg,
    #f5f5f5 0px,
    #f5f5f5 1px,
    #e0e0e0 1px,
    #e0e0e0 50px
  );
  animation: grid 15s linear infinite;
  z-index: -1; /* Ensure it stays behind the content */
}

*/

